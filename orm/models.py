import datetime
from sqlalchemy import or_, Column, Integer, String, Float, Boolean, DateTime, Table, ForeignKey, UniqueConstraint
from sqlalchemy.orm import relationship
from sqlalchemy.ext.associationproxy import association_proxy
from sqlalchemy.ext.declarative import declarative_base

# initialize DeclarativeBase for the models
Base = declarative_base()

class RemedyCase(Base):
    __tablename__ = 'remedy_cases'
    id = Column(Integer, primary_key=True)
    property_type = Column(String)
    agency_ref = Column(String)
    assignment_officer = Column(String)
    call_id = Column(String)
    call_type = Column(String)
    assigned_to = Column(String)
    last_log_entry = Column(String)
    bulk_uplift_date = Column(DateTime)
    est_resp_date = Column(DateTime)
    est_resp_date_bst = Column(DateTime)
    pan = Column(String)
    pen = Column(String)
    cust_sat_call_back = Column(String)
    route = Column(String)
    caller_type = Column(String)
    date_1st_contact_made = Column(DateTime)
    date_1st_contact_made_bst = Column(DateTime)
    date_paid = Column(DateTime)
    date_paid_bst = Column(DateTime)
    eps_closure_code = Column(String)
    agent_login_id = Column(String)
    issue_count = Column(String)
    ward = Column(String)
    ward_no__decoded_from_ward_name_ = Column(String)
    ward_no__directly_from_database_ = Column(String)
    host_department = Column(String)
    priority = Column(String)
    ralf_priority = Column(String)
    call_topic = Column(String)
    call_topic_category_1 = Column(String)
    call_topic_category_2 = Column(String)
    call_topic_category_3 = Column(String)
    call_summary = Column(String)
    caller_geographic_location = Column(String)
    caller_name = Column(String)
    details = Column(String)
    location_description = Column(String)
    call_agent = Column(String)
    call_opened_date = Column(DateTime)
    call_opened_date_bst = Column(DateTime)
    call_opened_date_time = Column(DateTime)
    call_opened_time = Column(DateTime)
    call_opened_date_time_bst = Column(DateTime)
    call_opened_time_bst = Column(DateTime)
    call_closed_date = Column(DateTime)
    call_closed_date_bst = Column(DateTime)
    call_closed_date_time = Column(DateTime)
    call_closed_date_time_bst = Column(DateTime)
    call_resolved = Column(String)
    call_resolved_bst = Column(String)
    sla_status = Column(String)
    source_information = Column(String)
    transfer_type = Column(String)
    service_add_email_address = Column(String)
    service_add_name_num = Column(String)
    service_add_phone = Column(String)
    contact_add_town = Column(String)
    service_address = Column(String)
    service_add_post_code = Column(String)
    request_status = Column(String)
    usrn = Column(String)
    date_time_last_modified = Column(DateTime)
    date_time_last_modified_bst = Column(DateTime)
    date_time_sla_warning = Column(DateTime)
    date_time_sla_warning_bst = Column(DateTime)
    date_time_sla_violation = Column(DateTime)
    date_time_sla_violation_bst = Column(DateTime)
    last_modified_by = Column(String)
    service_request_log = Column(String)
    date_time_manual_closed = Column(DateTime)
    date_time_manual_closed_bst = Column(DateTime)
    refusal_list = Column(String)
    foi_closure_code = Column(String)
    lay_assessors_pin_no = Column(String)
    charge_code = Column(String)
    item_quantity = Column(String)
    invoice_address = Column(String)
    manual_closed___system_closed_date = Column(DateTime)
    closure_code = Column(String)
    complaint_justified = Column(String)
    private_individual = Column(String)
    business = Column(String)
    media = Column(String)
    academic = Column(String)
    charity__lobby_or_campaign = Column(String)
    msp__med__mp_or_peers = Column(String)
    other_groups = Column(String)
    applicant_ethnic_origin = Column(String)
    disability_info = Column(String)
    other_communication_method = Column(String)
    neighbourhood_code = Column(String)
    cpp_code = Column(String)
    chcp_code = Column(String)
    tag_id = Column(String)
    surface_type = Column(String)
    meterage_quantity = Column(String)
    repair_type = Column(String)
    time_taken = Column(DateTime)
    utility = Column(String)
    payment_authorised_received = Column(String)
    niv_grading = Column(String)
    original_request_id = Column(String)
    original_create_date = Column(DateTime)
    original_create_date_bst = Column(DateTime)
    original_create_time = Column(DateTime)
    original_create_time_bst = Column(DateTime)
    contact_premise_no = Column(String)
    contact_premise_name = Column(String)
    uprn = Column(String)
    opt_out_reason = Column(String)
    other_reason = Column(String)
    calendar_code = Column(String)
    number_completed = Column(String)
    dangerous_defect = Column(String)
    avoiding_action = Column(String)
    caller_title = Column(String)
    caller_first_name = Column(String)
    caller_second_name = Column(String)
    status_code  = Column(String)
    care_group = Column(String)
    make = Column(String)
    permit_zone = Column(String)
    vrm = Column(String)
    request_printed = Column(String)
    mcs_call_assignment = Column(String)
    opening_hours = Column(String)
    contact_mobile = Column(String)
    product_type = Column(String)
    summary = Column(String)
    def __repr__(self):
        return "<RemedyCase(id = '%s', assigned='%s', category_1='%s', call_opened_date='%s', date_time_last_modified='%s'>" % \
               (self.id, self.assigned_to, self.call_topic_category_1, self.call_opened_date_time, self.date_time_last_modified)

class ArchiveCase(Base):
    __tablename__ = 'archive_cases'
    id = Column(Integer, primary_key=True)
    assignment_officer = Column(String)
    call_id = Column(String)
    call_type = Column(String)
    assigned_to = Column(String)
    last_log_entry = Column(String)
    bulk_uplift_date = Column(DateTime)
    est_resp_date = Column(DateTime)
    est_resp_date_bst = Column(DateTime)
    pan = Column(String)
    pen = Column(String)
    cust_sat_call_back = Column(String)
    route = Column(String)
    caller_type = Column(String)
    date_1st_contact_made = Column(DateTime)
    date_1st_contact_made_bst = Column(DateTime)
    date_paid = Column(DateTime)
    date_paid_bst = Column(DateTime)
    eps_closure_code = Column(String)
    agent_login_id = Column(String)
    issue_count = Column(String)
    ward = Column(String)
    ward_no__decoded_from_ward_name_ = Column(String)
    ward_no__directly_from_database_ = Column(String)
    host_department = Column(String)
    priority = Column(String)
    ralf_priority = Column(String)
    call_topic = Column(String)
    call_topic_category_1 = Column(String)
    call_topic_category_2 = Column(String)
    call_topic_category_3 = Column(String)
    call_summary = Column(String)
    caller_geographic_location = Column(String)
    caller_name = Column(String)
    details = Column(String)
    location_description = Column(String)
    call_agent = Column(String)
    call_opened_date = Column(DateTime)
    call_opened_date_bst = Column(DateTime)
    call_opened_date_time = Column(DateTime)
    call_opened_time = Column(DateTime)
    call_opened_date_time_bst = Column(DateTime)
    call_opened_time_bst = Column(DateTime)
    call_closed_date = Column(DateTime)
    call_closed_date_bst = Column(DateTime)
    call_closed_date_time = Column(DateTime)
    call_closed_date_time_bst = Column(DateTime)
    call_resolved = Column(String)
    call_resolved_bst = Column(String)
    sla_status = Column(String)
    source_information = Column(String)
    transfer_type = Column(String)
    service_add_email_address = Column(String)
    service_add_name_num = Column(String)
    service_add_phone = Column(String)
    contact_add_town = Column(String)
    service_address = Column(String)
    request_status = Column(String)
    usrn = Column(String)
    date_time_last_modified = Column(DateTime)
    date_time_last_modified_bst = Column(DateTime)
    date_time_sla_warning = Column(DateTime)
    date_time_sla_warning_bst = Column(DateTime)
    date_time_sla_violation = Column(DateTime)
    date_time_sla_violation_bst = Column(DateTime)
    last_modified_by = Column(String)
    service_request_log = Column(String)
    date_time_manual_closed = Column(DateTime)
    date_time_manual_closed_bst = Column(DateTime)
    refusal_list = Column(String)
    foi_closure_code = Column(String)
    lay_assessors_pin_no = Column(String)
    charge_code = Column(String)
    item_quantity = Column(String)
    invoice_address = Column(String)
    manual_closed___system_closed_date = Column(DateTime)
    closure_code = Column(String)
    complaint_justified = Column(String)
    private_individual = Column(String)
    business = Column(String)
    media = Column(String)
    academic = Column(String)
    charity__lobby_or_campaign = Column(String)
    msp__med__mp_or_peers = Column(String)
    other_groups = Column(String)
    applicant_ethnic_origin = Column(String)
    disability_info = Column(String)
    other_communication_method = Column(String)
    neighbourhood_code = Column(String)
    cpp_code = Column(String)
    chcp_code = Column(String)
    tag_id = Column(String)
    surface_type = Column(String)
    meterage_quantity = Column(String)
    repair_type = Column(String)
    time_taken = Column(DateTime)
    utility = Column(String)
    payment_authorised_received = Column(String)
    original_request_id = Column(String)
    original_create_date = Column(DateTime)
    original_create_date_bst = Column(DateTime)
    original_create_time = Column(DateTime)
    original_create_time_bst = Column(DateTime)
    contact_premise_no = Column(String)
    contact_premise_name = Column(String)
    uprn = Column(String)
    number_completed = Column(String)
    caller_title = Column(String)
    caller_first_name = Column(String)
    caller_second_name = Column(String)
    status_code  = Column(String)
    def __repr__(self):
        return "<ArchiveCase(id = '%s', assigned='%s', category_1='%s', call_opened_date='%s', date_time_last_modified='%s'>" % \
               (self.id, self.assigned_to, self.call_topic_category_1, self.original_create_time, self.date_time_last_modified)


class RemedyTest(Base):
    __tablename__ = 'remedy_test'
    id = Column(Integer, primary_key=True)
    property_type = Column(String)
    agency_ref = Column(String)
    assignment_officer = Column(String)
    call_id = Column(String)
    call_type = Column(String)
    assigned_to = Column(String)
    last_log_entry = Column(String)
    bulk_uplift_date = Column(DateTime)
    est_resp_date = Column(DateTime)
    est_resp_date_bst = Column(DateTime)
    pan = Column(String)
    pen = Column(String)
    cust_sat_call_back = Column(String)
    route = Column(String)
    caller_type = Column(String)
    date_1st_contact_made = Column(DateTime)
    date_1st_contact_made_bst = Column(DateTime)
    date_paid = Column(DateTime)
    date_paid_bst = Column(DateTime)
    eps_closure_code = Column(String)
    agent_login_id = Column(String)
    issue_count = Column(String)
    ward = Column(String)
    ward_no__decoded_from_ward_name_ = Column(String)
    ward_no__directly_from_database_ = Column(String)
    host_department = Column(String)
    priority = Column(String)
    ralf_priority = Column(String)
    call_topic = Column(String)
    call_topic_category_1 = Column(String)
    call_topic_category_2 = Column(String)
    call_topic_category_3 = Column(String)
    call_summary = Column(String)
    caller_geographic_location = Column(String)
    caller_name = Column(String)
    details = Column(String)
    location_description = Column(String)
    call_agent = Column(String)
    call_opened_date = Column(DateTime)
    call_opened_date_bst = Column(DateTime)
    call_opened_date_time = Column(DateTime)
    call_opened_time = Column(DateTime)
    call_opened_date_time_bst = Column(DateTime)
    call_opened_time_bst = Column(DateTime)
    call_closed_date = Column(DateTime)
    call_closed_date_bst = Column(DateTime)
    call_closed_date_time = Column(DateTime)
    call_closed_date_time_bst = Column(DateTime)
    call_resolved = Column(String)
    call_resolved_bst = Column(String)
    sla_status = Column(String)
    source_information = Column(String)
    transfer_type = Column(String)
    service_add_email_address = Column(String)
    service_add_name_num = Column(String)
    service_add_phone = Column(String)
    contact_add_town = Column(String)
    service_address = Column(String)
    service_add_post_code = Column(String)
    request_status = Column(String)
    usrn = Column(String)
    date_time_last_modified = Column(DateTime)
    date_time_last_modified_bst = Column(DateTime)
    date_time_sla_warning = Column(DateTime)
    date_time_sla_warning_bst = Column(DateTime)
    date_time_sla_violation = Column(DateTime)
    date_time_sla_violation_bst = Column(DateTime)
    last_modified_by = Column(String)
    service_request_log = Column(String)
    date_time_manual_closed = Column(DateTime)
    date_time_manual_closed_bst = Column(DateTime)
    refusal_list = Column(String)
    foi_closure_code = Column(String)
    lay_assessors_pin_no = Column(String)
    charge_code = Column(String)
    item_quantity = Column(String)
    invoice_address = Column(String)
    manual_closed___system_closed_date = Column(DateTime)
    closure_code = Column(String)
    complaint_justified = Column(String)
    private_individual = Column(String)
    business = Column(String)
    media = Column(String)
    academic = Column(String)
    charity__lobby_or_campaign = Column(String)
    msp__med__mp_or_peers = Column(String)
    other_groups = Column(String)
    applicant_ethnic_origin = Column(String)
    disability_info = Column(String)
    other_communication_method = Column(String)
    neighbourhood_code = Column(String)
    cpp_code = Column(String)
    chcp_code = Column(String)
    tag_id = Column(String)
    surface_type = Column(String)
    meterage_quantity = Column(String)
    repair_type = Column(String)
    time_taken = Column(DateTime)
    utility = Column(String)
    payment_authorised_received = Column(String)
    niv_grading = Column(String)
    original_request_id = Column(String)
    original_create_date = Column(DateTime)
    original_create_date_bst = Column(DateTime)
    original_create_time = Column(DateTime)
    original_create_time_bst = Column(DateTime)
    contact_premise_no = Column(String)
    contact_premise_name = Column(String)
    uprn = Column(String)
    opt_out_reason = Column(String)
    other_reason = Column(String)
    calendar_code = Column(String)
    number_completed = Column(String)
    dangerous_defect = Column(String)
    avoiding_action = Column(String)
    caller_title = Column(String)
    caller_first_name = Column(String)
    caller_second_name = Column(String)
    status_code  = Column(String)
    care_group = Column(String)
    make = Column(String)
    permit_zone = Column(String)
    vrm = Column(String)
    request_printed = Column(String)
    mcs_call_assignment = Column(String)
    opening_hours = Column(String)
    contact_mobile = Column(String)
    product_type = Column(String)
    summary = Column(String)
    def __repr__(self):
        return "<RemedyTest(id = '%s', assigned='%s', category_1='%s', call_opened_date='%s', date_time_last_modified='%s'>" % \
               (self.id, self.assigned_to, self.call_topic_category_1, self.call_opened_date_time, self.date_time_last_modified)

class ArchiveTest(Base):
    __tablename__ = 'archive_test'
    id = Column(Integer, primary_key=True)
    assignment_officer = Column(String)
    call_id = Column(String)
    call_type = Column(String)
    assigned_to = Column(String)
    last_log_entry = Column(String)
    bulk_uplift_date = Column(DateTime)
    est_resp_date = Column(DateTime)
    est_resp_date_bst = Column(DateTime)
    pan = Column(String)
    pen = Column(String)
    cust_sat_call_back = Column(String)
    route = Column(String)
    caller_type = Column(String)
    date_1st_contact_made = Column(DateTime)
    date_1st_contact_made_bst = Column(DateTime)
    date_paid = Column(DateTime)
    date_paid_bst = Column(DateTime)
    eps_closure_code = Column(String)
    agent_login_id = Column(String)
    issue_count = Column(String)
    ward = Column(String)
    ward_no__decoded_from_ward_name_ = Column(String)
    ward_no__directly_from_database_ = Column(String)
    host_department = Column(String)
    priority = Column(String)
    ralf_priority = Column(String)
    call_topic = Column(String)
    call_topic_category_1 = Column(String)
    call_topic_category_2 = Column(String)
    call_topic_category_3 = Column(String)
    call_summary = Column(String)
    caller_geographic_location = Column(String)
    caller_name = Column(String)
    details = Column(String)
    location_description = Column(String)
    call_agent = Column(String)
    call_opened_date = Column(DateTime)
    call_opened_date_bst = Column(DateTime)
    call_opened_date_time = Column(DateTime)
    call_opened_time = Column(DateTime)
    call_opened_date_time_bst = Column(DateTime)
    call_opened_time_bst = Column(DateTime)
    call_closed_date = Column(DateTime)
    call_closed_date_bst = Column(DateTime)
    call_closed_date_time = Column(DateTime)
    call_closed_date_time_bst = Column(DateTime)
    call_resolved = Column(String)
    call_resolved_bst = Column(String)
    sla_status = Column(String)
    source_information = Column(String)
    transfer_type = Column(String)
    service_add_email_address = Column(String)
    service_add_name_num = Column(String)
    service_add_phone = Column(String)
    contact_add_town = Column(String)
    service_address = Column(String)
    request_status = Column(String)
    usrn = Column(String)
    date_time_last_modified = Column(DateTime)
    date_time_last_modified_bst = Column(DateTime)
    date_time_sla_warning = Column(DateTime)
    date_time_sla_warning_bst = Column(DateTime)
    date_time_sla_violation = Column(DateTime)
    date_time_sla_violation_bst = Column(DateTime)
    last_modified_by = Column(String)
    service_request_log = Column(String)
    date_time_manual_closed = Column(DateTime)
    date_time_manual_closed_bst = Column(DateTime)
    refusal_list = Column(String)
    foi_closure_code = Column(String)
    lay_assessors_pin_no = Column(String)
    charge_code = Column(String)
    item_quantity = Column(String)
    invoice_address = Column(String)
    manual_closed___system_closed_date = Column(DateTime)
    closure_code = Column(String)
    complaint_justified = Column(String)
    private_individual = Column(String)
    business = Column(String)
    media = Column(String)
    academic = Column(String)
    charity__lobby_or_campaign = Column(String)
    msp__med__mp_or_peers = Column(String)
    other_groups = Column(String)
    applicant_ethnic_origin = Column(String)
    disability_info = Column(String)
    other_communication_method = Column(String)
    neighbourhood_code = Column(String)
    cpp_code = Column(String)
    chcp_code = Column(String)
    tag_id = Column(String)
    surface_type = Column(String)
    meterage_quantity = Column(String)
    repair_type = Column(String)
    time_taken = Column(DateTime)
    utility = Column(String)
    payment_authorised_received = Column(String)
    original_request_id = Column(String)
    original_create_date = Column(DateTime)
    original_create_date_bst = Column(DateTime)
    original_create_time = Column(DateTime)
    original_create_time_bst = Column(DateTime)
    contact_premise_no = Column(String)
    contact_premise_name = Column(String)
    uprn = Column(String)
    number_completed = Column(String)
    caller_title = Column(String)
    caller_first_name = Column(String)
    caller_second_name = Column(String)
    status_code  = Column(String)
    def __repr__(self):
        return "<ArchiveTest(id = '%s', assigned='%s', category_1='%s', call_opened_date='%s', date_time_last_modified='%s'>" % \
               (self.id, self.assigned_to, self.call_topic_category_1, self.original_create_time, self.date_time_last_modified)

### Get or create object
def get_or_create(session, model, **kwargs):
    instance = session.query(model).filter_by(**kwargs).first()
    if instance:
        return instance
    else:
        instance = model(**kwargs)
        session.add(instance)
        session.commit()
        return instance
